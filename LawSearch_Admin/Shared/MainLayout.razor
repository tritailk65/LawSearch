@using LawSearch_Admin.Extensions
@using LawSearch_Admin.Pages
@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject ICookieService cookie
@inject IUserAdminService UserAdminService;
@inject AuthenticationStateProvider _authenticationStateProvider;

<AuthorizeView>
    <Authorized>
        <div class="page">
            <div class="header">
                <div class="logo">
                     <img class="logo-img" src="assets/image/Logo.png" alt="Logo main">
                </div>
                <div class="user-info">
                    <div class="avatar-container" @onclick=handleClickAvatar>
                        <img src=@getPathAvatar(role) alt="User Avatar" class="avatar">
                        <div class="status"></div>
                    </div>
                </div>
                @if (openUserMenu)
                {
                    <div class="userMenu_view">
                        <div class="userMenu_function_btn">
                            <a>Hello @context.User.Identity.Name</a>
                            <div class="level_cicle_view">
                                <a>Level @role</a>
                            </div>
                        </div>

                        <div class="spacer"> </div>

                        <div class="userMenu_function_btn" @onclick=handleClickLogout>
                            <img src="assets/icon/logout.png" />
                            <a>Logout</a>
                        </div>
                    </div>
                }
            </div>

            <div class="sidebar">
                <NavMenu />
            </div>

            <main>
                <div class="content_middle">
                    @Body
                </div>
            </main>
        </div>
    </Authorized>
    <NotAuthorized>
        <LoginPage/>
    </NotAuthorized>
</AuthorizeView>

@code {
    public string avatarPath = "";
    public bool openUserMenu = false;
    private string role = "";

    protected override async Task OnInitializedAsync()
    {
        var rs = await cookie.GetValue(CookieKeys.userrole);
        if (!string.IsNullOrEmpty(rs))
        {
            role = rs;
            StateHasChanged();
        }
    }

    private string getPathAvatar(string Role)
    {
        if (Role == "Admin")
        {
            return "assets/image/avatarAdmin.png";
        } else
        {
            return "assets/image/avatarUser.png";
        }
    }

    public void handleClickAvatar()
    {
        openUserMenu = !openUserMenu;
    }

    public async Task handleClickLogout()
    {
        await UserAdminService.UserLogout();
        openUserMenu = false;
    }
}
