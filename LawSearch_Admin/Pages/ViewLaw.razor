@page "/viewlaw"
@inject ILawDocAdminService lawDocAdminService;

<div class="body-container">
    <div class="header-content">
        <div class="title">
            Select your document
        </div>
        <select class="custom-select" @onchange="GetDataLaw">
            @if (lstLawDoc != null)
            {
                @foreach (var law in lstLawDoc)
                {
                    <option class="dropdown-item" value="@law.ID">@law.Name</option>
                }
            }
        </select>
        <button class="btn-view-full" data-toggle="modal" data-target="#exampleModal">
            View full document
        </button>
    </div>

    <div class="main-content">
        <div class="left-content">
            @if (lawVM == null)
            {
                <div class="loading_">
                    <span class="loader"></span>
                </div>
            }
            else if (lawVM != null)
            {
                <div class="index">
                    <TreeView Items="@dataIndex" OnSelect="item => Console.WriteLine(item.Text)" />
                </div>
            }
        </div>
        <div class="right-content">
            @if (lawHTML != null)
            {
                <div class="document-view">
                    @((MarkupString)lawHTML.contentHTML) *
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="full-right-content">
                    @if (lawHTML != null)
                    {
                        <div class="full-document-view">
                            @((MarkupString)lawHTML.contentHTML);
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>
</div>

@code {
    public List<LawDoc> lstLawDoc = new List<LawDoc>();

    public LawVM lawVM = new LawVM();
    public LawHTML lawHTML = new LawHTML();
    public List<TreeViewItem> dataIndex;

    protected override async Task OnInitializedAsync()
    {
        lawVM = null;
        lawHTML = null;
        var lstLawDocData = await lawDocAdminService.GetListLawDoc();
        lstLawDoc = lstLawDocData;
        var loadHTML = await lawDocAdminService.GetLawHTML(lstLawDoc[0].ID);
        lawHTML = loadHTML;
        var data = await lawDocAdminService.GetDataLaw(lstLawDoc[0].ID);
        lawVM = data;
        if (lawVM != null)
        {
            dataIndex = getDataIndex();
        }
    }

    private async void GetDataLaw(ChangeEventArgs e)
    {
        lawVM = null;
        lawHTML = null;
        int id = Convert.ToInt32(e.Value);
        var loadHTML = await lawDocAdminService.GetLawHTML(id);
        lawHTML = loadHTML;
        var data = await lawDocAdminService.GetDataLaw(id);
        lawVM = data;
        if (lawVM != null)
        {
            dataIndex = getDataIndex();
        }
        StateHasChanged();
    }

    private List<TreeViewItem> getDataIndex()
    {
        List<TreeViewItem> treeChapters = new List<TreeViewItem>();
        foreach (var c in lawVM.lstChapters)
        {
            TreeViewItem treeChapter = new TreeViewItem(c.Name + ": " + c.Title);
            if (c.lstSections != null && c.lstSections.Count > 0)
            {
                List<TreeViewItem> treeSections = new List<TreeViewItem>();
                var sections = c.lstSections
                       .Where(x => x.ChapterID == c.ID)
                       .OrderBy(x => x.ID);
                foreach (var s in sections)
                {
                    TreeViewItem treeSection = new TreeViewItem(s.Name != "" ? s.Name : "");
                    if (s.lstArticals != null && s.lstArticals.Count > 0)
                    {
                        List<TreeViewItem> treeArticals = new List<TreeViewItem>();
                        var articals = s.lstArticals
                                        .Where(x => x.ChapterItemID == s.ID)
                                        .OrderBy(x => x.ID);
                        foreach (var a in articals)
                        {
                            treeArticals.Add(new TreeViewItem(a.Name + ": " + a.Title));
                        }
                        treeSection.Children = treeArticals;
                    }
                    treeSections.Add(treeSection);
                }
                treeChapter.Children = treeSections;
            }
            treeChapters.Add(treeChapter);
        }
        return treeChapters;
    }
}