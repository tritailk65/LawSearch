@page "/concept"
@inject IConceptAdminService _conceptService;


@* <div class="title">
    <h3 >Concept</h3>
</div> *@

<div>
    <Button ButtonStyle="add-button" @onclick="() => {}">
        Add
    </Button>
    <Button ButtonStyle="delete-button" @onclick="() => {}">
        Delete
    </Button>
    <Button ButtonStyle="reset-button" @onclick="() => {}">
        Reset
    </Button>
</div>

<div class="content">
    <div class="left-content">
        <div class="search-container">
            <input type="text" placeholder="Tìm kiếm..." @bind="@searchKeyword" @oninput="HandleSearchInputChange">
        </div>
        <div class="list-concept">        
            @if (concepts != null && concepts.Any() && filterConcepts == null)
            {
                <ol>
                    @foreach (var item in concepts)
                    {
                        <li @onclick="@(()=> ShowDetail(item))" style="cursor: pointer">@item.Name</li>
                    }
                </ol>
            } else if (filterConcepts != null)
            {
                <ol>
                    @foreach (var item in filterConcepts)
                    {
                        <li @onclick="@(()=> ShowDetail(item))" style="cursor: pointer">@item.Name</li>
                    }
                </ol>
            }
            else
            {
                <p>Loading...</p>
            }
        </div>
    </div>
 
    <div class="concept-detail">
        <ShowDetailConcept concept="@conceptDetail"/>
    </div>
</div>

@code {
    public List<Concept> concepts;
    public List<Concept> filterConcepts = null;
    public Concept conceptDetail;
    public string searchKeyword = "";
    public bool isSearch = false;

    protected override async Task OnInitializedAsync()
    {
        var data = await _conceptService.GetListConcept();
        concepts = data;
    }

    private void ShowDetail(Concept concept)
    {
        conceptDetail = concept;
    }

    //Tối ưu hóa lại hàm này khi có thời gian 
    private void HandleSearchInputChange(ChangeEventArgs e)
    {
        searchKeyword = e.Value.ToString();
        IEnumerable<Concept> filter = concepts.Where(c => c.Name.Contains(searchKeyword, StringComparison.OrdinalIgnoreCase));
        if (filter != null)
        {
            filterConcepts = filter.ToList();
        } else
        {
            filterConcepts = null;
        }
    }

    private void HandleClick(MouseEventArgs e)
    {
        // Xử lý sự kiện click button tại đây
    }
}
