@page "/history"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager
@inject IHistoryAdminService historyService;
@inject ICookieService _cookieService;

<style>
    .input-date {
        width: 200px;
        margin-right: 20px;
        border-radius: 10px;
        border: 2px solid #7367F0;
    }
</style>

<div class="main-content">
    <EditForm Model="model" OnValidSubmit="Submit" >
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="d-flex w-100 align-content-center mt-2">

            <label class="mx-lg-3 fs-6 fw-bold align-content-center">From date:</label>

            <InputDate class="input-date" @bind-Value="model!.fromDate"/>

            <label class="mx-lg-3 fs-6 fw-bold  align-content-center">To date:</label>

            <InputDate class="input-date" @bind-Value="model!.toDate" />

            <Button ButtonStyle="reset-button btn-custom" style="width: 160px; margin-top: none; margin-left:10px">
                Search
            </Button>
        </div>
    </EditForm>
    <div class="table-content">
        @if (loadingData)
        {
            <div class="loading_">
                <span class="loader"></span>
            </div>
        }
        @if (data != null && !loadingData)
        {
            if(data.Count > 0)
            {
                <table class="table table-dark table-striped table-hover">
                    <thead style="height: 50px">
                        <tr>
                            <th scope="col">Number</th>
                            <th scope="col">Search</th>
                            <th scope="col">DateTime</th>
                            <th scope="col">User</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < data.Count; i++)
                        {
                            <tr>
                                <th scope="row">@(i + 1)</th>
                                <td>@data[i].Value</td>
                                <td>@data[i].DateTime</td>
                                <td>@data[i].UserName</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {          
                <div class="w-100 h-100 d-flex justify-content-center align-items-center">
                    <img class="" style="width:320px; height: 300px" src="assets/image/noresult.png" alt="no-result-image"/>
                </div>
            }
        }
    </div>
</div>

@code {
    [SupplyParameterFromQuery]
    private FormDateModel model { get; set; }
    private List<HistorySearch> data = new List<HistorySearch>();
    private bool loadingData = false;
    private bool isEmpty = false;
    private string UserID = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        data = null;
        loadingData = true;
        model ??= new() { fromDate = DateTime.Now.AddDays(-30), toDate = DateTime.Now };

        var getUserIDFromCookie = await _cookieService.GetValue(CookieKeys.userid);
        if (!string.IsNullOrEmpty(getUserIDFromCookie)){ UserID = getUserIDFromCookie; }

        var rs = await historyService.GetHistorySearch(Convert.ToInt32(UserID), model.fromDate, model.toDate);
        if (rs != null)
        {
            data = rs;
            loadingData = false;
            StateHasChanged();
        }
    }

    private async void Submit()
    {
        Console.WriteLine($"From date = {model?.fromDate} To date = {model?.toDate}");

        loadingData = true;
        var getData = await historyService.GetHistorySearch(1, model.fromDate, model.toDate);
        if (getData != null)
        {
            data = getData;
            loadingData = false;
            StateHasChanged();
        }
        else
        {
            data = null;
            loadingData = false;
            StateHasChanged();
        }
    }

}
